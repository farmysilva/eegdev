.\"Copyright 2010 (c) EPFL
.TH EGD_START 3 2010 "EPFL" "EEGDEV library manual"
.SH NAME
egd_start, egd_stop - start and stop buffered acquisition
.SH SYNOPSIS
.LP
.B #include <eegdev.h>
.sp
.BI "int egd_start(struct eegdev* " dev ");"
.br
.BI "int egd_stop(struct eegdev* " dev ");"
.br
.SH DESCRIPTION
.LP
\fBegd_start\fP() marks the beginning of buffered acquisition from the
device referenced by \fIdev\fP. This means that the data starts getting
accumulated in an internal ring buffer and this buffered data can be
sequentially obtained by successive calls to \fBegd_get_data\fP(3). A
buffered acquisition started implies that the user has to get the data
often enough to prevent the situation of a full ring buffer.
.LP
\fBegd_stop\fP() halts the buffered acquisition of the device referenced by
\fIdev\fP, relieving the user from the obligation to get data regularly.
.SH "RETURN VALUE"
.LP
The function returns 0 in case of success. Otherwise, \-1 is returned and
\fIerrno\fP is set accordingly.
.SH ERRORS
.LP
\fBegd_start\fP() and \fBegd_stop\fP() will fail if:
.TP
.B EINVAL
\fIdev\fP is NULL.
.SH "SEE ALSO"
.BR egd_get_data (3),
.BR egd_get_available (3)
